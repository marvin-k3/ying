[project]
name = "ying"
version = "0.1.0"
description = "RTSP Music Tagger - like the Dr. Seuss character in One Fish Two Fish"
authors = [
    {name = "Ying Team", email = "ying@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.0",
    "aiosqlite>=0.19.0",
    "aiohttp>=3.9.0",
    "prometheus-client>=0.19.0",
    "sentence-transformers>=2.2.0",
    "umap-learn>=0.5.5",
    "hdbscan>=0.8.33",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.88.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "httpx>=0.25.0",
    "freezegun>=1.2.0",
]

[project.scripts]
ying = "app.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "hypothesis>=6.88.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "httpx>=0.25.0",
    "freezegun>=1.2.0",
]

[tool.rye.scripts]
dev = "uvicorn app.main:app --host 0.0.0.0 --port 44100 --reload"
serve = "uvicorn app.main:app --host 0.0.0.0 --port 44100"
test = "pytest -q --cov=app --cov-report=term-missing --cov-fail-under=85"
lint = "ruff check ."
fmt = "ruff format ."
typecheck = "mypy app"
migrate = "python -m app.db.migrate"
embed-backfill = "python -m app.embeddings.index backfill"
clusters-recompute = "python -m app.clustering.pipeline run-once"
dev-wav = "python -m app.devharness.wav_stream --from-wav ./tests/data/demo.wav"

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sentence_transformers.*",
    "umap.*", 
    "hdbscan.*",
    "prometheus_client.*",
    "opentelemetry.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-fail-under=85",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]
